// Generated by gencpp from file fast_lio/Pose6D.msg
// DO NOT EDIT!


#ifndef FAST_LIO_MESSAGE_POSE6D_H
#define FAST_LIO_MESSAGE_POSE6D_H


#include <string>
#include <vector>
#include <map>

#include "boost/array.hpp"

template <class ContainerAllocator>
struct Pose6D_
{
  typedef Pose6D_<ContainerAllocator> Type;

  Pose6D_()
    : offset_time(0.0)
    , acc()
    , gyr()
    , vel()
    , pos()
    , rot()  {
      acc.assign(0.0);

      gyr.assign(0.0);

      vel.assign(0.0);

      pos.assign(0.0);

      rot.assign(0.0);
  }
  Pose6D_(const ContainerAllocator& _alloc)
    : offset_time(0.0)
    , acc()
    , gyr()
    , vel()
    , pos()
    , rot()  {
  (void)_alloc;
      acc.assign(0.0);

      gyr.assign(0.0);

      vel.assign(0.0);

      pos.assign(0.0);

      rot.assign(0.0);
  }



   typedef double _offset_time_type;
  _offset_time_type offset_time;

   typedef boost::array<double, 3>  _acc_type;
  _acc_type acc;

   typedef boost::array<double, 3>  _gyr_type;
  _gyr_type gyr;

   typedef boost::array<double, 3>  _vel_type;
  _vel_type vel;

   typedef boost::array<double, 3>  _pos_type;
  _pos_type pos;

   typedef boost::array<double, 9>  _rot_type;
  _rot_type rot;





  typedef boost::shared_ptr<Pose6D_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr<Pose6D_<ContainerAllocator> const> ConstPtr;

}; // struct Pose6D_

typedef Pose6D_<std::allocator<void> > Pose6D;

typedef boost::shared_ptr<Pose6D > Pose6DPtr;
typedef boost::shared_ptr<Pose6D const> Pose6DConstPtr;

// constants requiring out of line definition




#endif // FAST_LIO_MESSAGE_POSE6D_H
